{"version":3,"sources":["api/unsplash.js","components/ImageCard.js","components/ImageList.js","components/SearchBar.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","process","CLIENT_ID","ImageCard","props","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","setState","state","React","createRef","this","addEventListener","image","description","urls","style","gridRowEnd","ref","alt","src","regular","Component","ImageList","images","map","key","id","className","SearchBar","term","onFormSubmit","event","preventDefault","onSubmit","action","htmlFor","type","value","onChange","e","target","require","config","App","onSearchSubmit","a","console","log","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","querySelector"],"mappings":"gRAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,2BACTC,QAAS,CAACC,cAAc,aAAD,OAAeC,8HAAYC,cCsBvCC,G,wDAvBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAOVC,SAAW,WACP,IAAMC,EAAQ,EAAKC,SAASC,QAAQC,aAC9BC,EAAQC,KAAKC,KAAKN,EAAS,IACjC,EAAKO,SAAS,CAACH,WATf,EAAKI,MAAQ,CAACJ,MAAO,GACrB,EAAKH,SAAWQ,IAAMC,YAHP,E,gEAMfC,KAAKV,SAASC,QAAQU,iBAAiB,OAAQD,KAAKZ,Y,+BAQ9C,IAAD,EACsBY,KAAKb,MAAMe,MAA/BC,EADF,EACEA,YAAYC,EADd,EACcA,KACnB,OACI,yBAAKC,MAAO,CAACC,WAAW,QAAD,OAAUN,KAAKH,MAAMJ,SACxC,yBAAKc,IAAKP,KAAKV,SAAUkB,IAAKL,EAAaM,IAAKL,EAAKM,e,GAnB7CZ,IAAMa,YCWfC,EATG,SAACzB,GAChB,IAAM0B,EAAS1B,EAAM0B,OAAOC,KAAI,SAACZ,GAG5B,OAAO,kBAAC,EAAD,CAAYa,IAAKb,EAAMc,GAAId,MAAOA,OAE7C,OAAO,yBAAKe,UAAU,cAAcJ,ICkBzBK,E,4MAzBXrB,MAAQ,CACJsB,KAAM,I,EAEdC,aAAe,SAACC,GAGRA,EAAMC,iBACN,EAAKnC,MAAMoC,SAAS,EAAK1B,MAAMsB,O,uDAEzB,IAAD,OACL,OAAQ,yBAAKF,UAAU,cACf,0BAAMM,SAAUvB,KAAKoB,aAAcH,UAAU,UAAUO,OAAO,IAC1D,yBAAKP,UAAU,SACX,2BAAOQ,QAAQ,IAAf,gBACA,2BACIC,KAAK,OACLC,MAAO3B,KAAKH,MAAMsB,KAClBS,SAAU,SAACC,GAAD,OAAO,EAAKjC,SAAS,CAACuB,KAAMU,EAAEC,OAAOH,kB,GAlBnD7B,IAAMa,WCE9BoB,EAAQ,IAAUC,S,IA6BHC,E,4MAvBfpC,MAAQ,CACJgB,OAAO,I,EAENqB,e,uCAAiB,WAAOf,GAAP,eAAAgB,EAAA,6DACdC,QAAQC,IAAIlB,GADE,SAGSmB,EAASC,IAAI,iBAAkB,CAClDC,OAAQ,CAACC,MAAOtB,KAJN,OAGRuB,EAHQ,OAQdN,QAAQC,IAAIK,GACZ,EAAK9C,SAAS,CAACiB,OAAQ6B,EAASC,KAAKC,UATvB,2C,6GAad,OAAO,yBAAK3B,UAAU,eAAeZ,MAAO,CAACwC,UAAW,SACpD,kBAAC,EAAD,CAAWtB,SAAUvB,KAAKkC,iBAC3B,kBAAC,EAAD,CAAWrB,OAAQb,KAAKH,MAAMgB,c,GAnBvBf,IAAMa,WCJxBmC,IAASC,OACL,kBAAC,EAAD,MAEAC,SAASC,cAAc,Y","file":"static/js/main.06458b61.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers: {Authorization: `Client-ID ${process.env.CLIENT_ID}` }\n})\n","import React from 'react';\n\nclass ImageCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {spans: 0}\n        this.imageRef = React.createRef();\n    }\n    componentDidMount() {\n        this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n    setSpans = () => {\n        const height =this.imageRef.current.clientHeight;\n        const spans = Math.ceil(height / 10);\n        this.setState({spans})\n    }\n\n    render() {\n        const {description,urls} = this.props.image;\n        return(\n            <div style={{gridRowEnd: `span ${this.state.spans}`}}>\n                <img ref={this.imageRef} alt={description} src={urls.regular}/>\n            </div>\n        )\n    }\n}\nexport default ImageCard;","import React from 'react';\nimport './ImageList.css'\nimport ImageCard from './ImageCard.js';\n\nconst ImageList = (props) => {\n   const images = props.images.map((image) => { // the key property should be on the root tag\n       //meaning if the img tag was surrounded by a div tag, we would have put the key in the div.\n\n        return <ImageCard  key={image.id} image={image}  />\n    });\n    return <div className=\"image-list\">{images}</div>;\n}\n\nexport default ImageList;","import React from 'react'\n\nclass SearchBar extends React.Component {\n    state = {\n        term: '',\n    }\nonFormSubmit = (event) => { //this arrow function will make sure that this is always equal to the instance of\n        //the SearchBar class. but before this, this was undefined because no instance of the class was created\n    //when the function is called below.\n        event.preventDefault();\n        this.props.onSubmit(this.state.term);\n}\n    render() {\n        return (<div className=\"ui segment\">\n                <form onSubmit={this.onFormSubmit} className=\"ui form\" action=\"\">\n                    <div className=\"field\">\n                        <label htmlFor=\"\">Image Search</label>\n                        <input\n                            type=\"text\"\n                            value={this.state.term}\n                            onChange={(e) => this.setState({term: e.target.value})}/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","import React from 'react'\nimport unsplash from '../api/unsplash';\nimport ImageList from \"./ImageList\";\nimport SearchBar from './SearchBar';\nrequire('dotenv').config();\n// we put the import of modules and packages above the files that we import\n//and are ours\n\n\nclass App extends React.Component {\nstate = {\n    images:[],\n}\n     onSearchSubmit = async (term) => {\n        console.log(term);\n        //now I will start data fetching from here.\n        const response = await unsplash.get('/search/photos', {\n            params: {query: term},\n\n        }) // now we get the response from the website, there are two ways to handle this 1)using then\n        // 2) By using async and await keywords\n        console.log(response);\n        this.setState({images: response.data.results});\n    };\n\n    render() {\n        return <div className=\"ui container\" style={{marginTop: \"20px\"}}>\n            <SearchBar onSubmit={this.onSearchSubmit}/>\n           <ImageList images={this.state.images}/>\n        </div>;\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n    <App/>\n    ,\n    document.querySelector('#root')\n);\n\n"],"sourceRoot":""}